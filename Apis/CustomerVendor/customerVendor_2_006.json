{
	"openapi": "3.0.1",
	"servers":[
		{
			"description": "API para a entidade cliente/fornecedor (Customervendor) para produtos TOTVS",
			"url": "api.totvs.com.br"
		}
	],
	"info":{
		"description": "API para a entidade cliente/fornecedor (customerVendor) para produtos TOTVS",
		"version": "3.000",
		"title": "CustomerVendor",
		"contact":{
			"name": "T-Talk",
			"url": "api.Totvs.com.br",
			"email": "comiteintegracao@totvs.com.br"
		},
		"x-totvs":{
			"messageDocumentation":{
				"name": "Customervendor",
				"description": "Cliente/Fornecedor",
				"segment": "Services"
			},
			"productInformation":{
				"protheus":{
					"contact": "squad.crm@totvs.com.br",
					"description": "Cadastro de Cliente/Fornecedor",
					"adapter": "crms980.prw"
				}
			}
		}
	},
	"paths":{
		"/customerVendor":{
			"get":{
				"tags":[
					"customerVendor"
				],
				"summary": "Retorna todos Clientes/Fornecedores",
				"x-totvs":{
					"productInformation":{
						"protheus":{
							"available": true,
							"note": "Este verbo está disponível com os parâmetros Authorization, Fields, Order, Page, PageSize ",
							"minimalVersion": "12.1.21"
						}
					}
				},
				"description": "Retorna todos clientes e/ou fornecedores",
				"operationId": "getcustomerVendor",
				"parameters":[
					{
						"$ref": "#/components/parameters/Authorization"
					},
					{
						"$ref": "#/components/parameters/Fields"
					},
					{
						"$ref": "#/components/parameters/Order"
					},
					{
						"$ref": "#/components/parameters/Page"
					},
					{
						"$ref": "#/components/parameters/PageSize"
					}
				],
				"responses":{
					"200":{
						"description": "Operação realizada com sucesso",
						"content":{
							"application/json":{
								"schema":{
									"$ref": "#/components/schemas/PagedCustomerVendors"
								}
							}
						}
					},
					"400":{
						"description": "Erro na requisição!",
						"content":{
							"application/json":{
								"schema":{
									"$ref":"#/components/schemas/ErrorDetails"
								}
							}
						}
					}
				},
				"security":[
					{
						"api_key":[]
					}
				]
			},
			"post":{
				"tags":[
					"customerVendor"
				],
				"summary": "Inclui Cliente/Fornecedor passada na requisição",
				"description": "Inclui a entidade Cliente/Fornecedor passada na requisição",
				"operationId": "postcustomerVendor",
				"x-totvs":{
					"productInformation":{
						"protheus":{
							"available": true,
							"note": "Este verbo está disponível com os parâmetros Authorization e Fields"
						}
					}
				},
				"parameters":[
					{
						"$ref": "#/components/parameters/Authorization"
					},
					{
						"$ref": "#/components/parameters/Fields"
					}
				],
				"requestBody":{
					"description": "Entidade para ser incluida",
					"content":{
						"application/json":{
							"schema":{
								"$ref": "#/components/schemas/CustomerVendorInfo"
							}
						}
					}
				},
				"responses":{
					"200":{
						"description": "Operação realizada com sucesso",
						"content":{
							"application/json":{
								"schema":{
									"$ref": "#/components/schemas/PagedCustomerVendors"
								}
							}
						}
					},
					"400":{
						"description": "erro na Inclusão!",
						"content":{
							"application/json":{
								"schema":{
									"$ref":"#/components/schemas/ErrorDetails"
								}
							}
						}
					}
				},
				"security":[
					{
						"api_key":[]
					}
				]
			}
		},
		"/customerVendor/{entityType}":{
			"get":{
				"tags":[
					"customerVendorEntity"
				],
				"summary": "Retorna todos os registros de uma entidade específica",
				"description": "Retorna todos os registros de uma entidade específica - Customer ou Vendor",
				"operationId": "getentityType",
				"x-totvs":{
					"productInformation":{
						"protheus":{
							"available": true,
							"note": "Este verbo está disponível com os parâmetros EntityType, Authorization, Fields, Order, Page e PageSize",
							"minimalVersion": "12.1.21"
						}
					}
				},
				"parameters":[
					{
						"$ref": "#/components/parameters/EntityType"
					},
					{
						"$ref": "#/components/parameters/Authorization"
					},
					{
						"$ref": "#/components/parameters/Fields"
					},
					{
						"$ref": "#/components/parameters/Order"
					},
					{
						"$ref": "#/components/parameters/Page"
					},
					{
						"$ref": "#/components/parameters/PageSize"
					}
				],
				"responses":{
					"200":{
						"description": "Operação realizada com sucesso!",
						"content":{
							"application/json":{
								"schema":{
									"$ref": "#/components/schemas/PagedCustomerVendors"
								}
							}
						}
					},
					"404":{
						"description": "Entidade não localizada na base!",
						"content":{
							"application/json":{
								"schema":{
									"$ref":"#/components/schemas/ErrorDetails"
								}
							}
						}
					}
				},
				"security":[
					{
						"api_key":[]
					}
				]
			}
		},
		"/customerVendor/{customerVendorId}":{
			"get":{
				"tags":[
					"customerVendorId"
				],
				"summary": "Retorna Cliente/Fornecedor",
				"description": "Retorna  Cliente ou Fornecedor com base no código da entidade",
				"operationId": "getcustomerVendorId",
				"x-totvs":{
					"productInformation":{
						"protheus":{
							"available": true,
							"note": "Este verbo está disponível com os parâmetros CustomerVendorId,EntityType, Fields e Authorization",
							"minimalVersion": "12.1.21"
						}
					}
				},
				"parameters":[
					{
						"$ref": "#/components/parameters/CustomerVendorId"
					},
					{
						"$ref": "#/components/parameters/EntityType"
					},
					{
						"$ref": "#/components/parameters/Fields"
					},
					{
						"$ref": "#/components/parameters/Authorization"
					}
				],
				"responses":{
					"200":{
						"description": "Operação realizada com sucesso",
						"content":{
							"application/json":{
								"schema":{
									"$ref": "#/components/schemas/PagedCustomerVendors"
								}
							}
						}
					},
					"404":{
						"description": "Cliente/Vendedor não localizado na base!",
						"content":{
							"application/json":{
								"schema":{
									"$ref":"#/components/schemas/ErrorDetails"
								}
							}
						}
					}
				},
				"security":[
					{
						"api_key":[]
					}
				]
			},
			"put":{
				"tags":[
					"customerVendorId"
				],
				"summary": "Atualiza Cliente/Fornecedor informado na requisição",
				"description": "Atualiza a entidade Cliente/Fornecedor informada na requisição",
				"operationId": "putcustomerVendorId",
				"x-totvs":{
					"productInformation":{
						"protheus":{
							"available": true,
							"note": "Este verbo esta disponivel com os parâmetros authorization, customervendorID e Fields",
							"minimalVersion": "12.1.21"
						}
					}
				},
				"parameters":[
					{
						"$ref": "#/components/parameters/CustomerVendorId"
					},
					{
						"$ref": "#/components/parameters/Fields"
					},
					{
						"$ref": "#/components/parameters/Authorization"
					}
				],
				"requestBody":{
					"description": "Entidade para ser Alterada",
					"content":{
						"application/json":{
							"schema":{
								"$ref": "#/components/schemas/CustomerVendorInfo"
							}
						}
					}
				},
				"responses":{
					"200":{
						"description": "Alteração realizada com sucesso!",
						"content":{
							"application/json":{
								"schema":{
									"$ref": "#/components/schemas/PagedCustomerVendors"
								}
							}
						}
					},
					"400":{
						"description": "Erro no momento da alteração!",
						"content":{
							"application/json":{
								"schema":{
									"$ref":"#/components/schemas/ErrorDetails"
								}
							}
						}
					},
					"404":{
						"description": "Entidade não localizada na base!",
						"content":{
							"application/json":{
								"schema":{
									"$ref":"#/components/schemas/ErrorDetails"
								}
							}
						}
					}
				},
				"security":[
					{
						"api_key":[]
					}
				]
			},
			"delete":{
				"tags":[
					"customerVendorId"
				],
				"summary": "Exclui o Cliente/Fornecedor passada na requisição",
				"description": "Exclui a entidade Cliente/Fornecedor passada na requisição",
				"operationId": "deletecustomerVendorId",
				"x-totvs":{
					"productInformation":{
						"protheus":{
							"available": true,
							"note": "Este verbo esta disponivel com os parâmetros Authorization e CustomerVendorId ",
							"minimalVersion": "12.1.21"
						}
					}
				},
				"parameters":[
					{
						"$ref": "#/components/parameters/CustomerVendorId"
					},
					{
						"$ref": "#/components/parameters/Authorization"
					}
				],
				"responses":{
					"200":{
						"description": "Operação realizada com sucesso",
						"content":{
							"application/json":{
								"schema":{
                                    "$ref":"#/components/schemas/PagedCustomerVendors"
                                }
							}
						}
					},
					"400":{
						"description": "Erro no momento da exclusão!",
						"content":{
							"application/json":{
								"schema":{
									"$ref":"#/components/schemas/ErrorDetails"
								}
							}
						}
					},
					"404":{
						"description": "Entidade não localizada na base!",
						"content":{
							"application/json":{
								"schema":{
									"$ref":"#/components/schemas/ErrorDetails"
								}
							}
						}
					}
				},
				"security":[
					{
						"api_key":[]
					}
				]
			}
		}
	},
	"components":{
		"parameters":{
			"CustomerVendorId":{
				"name": "customerVendorId",
				"in": "path",
				"required": true,
				"description": "Identificador único representando a entidade",
				"schema":{
					"type": "string"
				}
			},
			"Fields":{
				"name":"fields",
				"in":"query",
				"description": "Listas de campos no retorno da requisição",
				"required": false,
				"schema":{
					"type": "array",
					"items":{
						"type": "string"
					}
				}
			},
			"EntityType":{
				"name": "entityType",
				"in": "path",
				"description": "Tipo da Entidade",
				"required": true,
				"schema":{
					"type": "array",
					"items":{
						"type": "string"
					}
				}
			},
			"Authorization":{
				"name": "authorization",
				"in": "header",
				"required": true,
				"description": "Cabeçalho usado para autorização das requisições",
				"schema":{
					"type": "string"
				}
			},
			"Order":{
				"name": "order",
				"in": "query",
				"description": "Ordenação da Coleção",
				"required": false,
				"schema":{
					"type": "array",
					"items":{
						"type": "string"
					}
				}
			},
			"Page":{
				"name": "page",
				"in": "query",
				"description": "Paginação da Coleção",
				"required": false,
				"schema":{
					"type": "integer",
					"format": "int32",
					"default": 1,
					"minimum": 1,
					"exclusiveMinimum": false
				}
			},
			"PageSize":{
				"name": "pageSize",
				"in": "query",
				"description": "Quantidade de Itens por Página",
				"required": false,
				"schema":{
					"type": "integer",
					"format": "int32",
					"default": 20
				}
			}
		},
		"schemas":{
			"PagedCustomerVendors":{
				"type": "object",
				"allOf":[
					{
						"$ref": "#/components/schemas/Paging"
					},
					{
						"$ref": "#/components/schemas/CustomerVendors"
					}
				]
			},
			"CustomerVendors":{
				"type":"object",
				"properties":{
					"CustomerVendor":{
						"type": "array",
						"items":{
							"$ref": "#/components/schemas/CustomerVendorInfo"
						}
					}
				}
			},
			"CustomerVendorInfo":{
				"type":"object",
				"properties":{
					"companyId":{
						"type": "string",
						"description":"Empresa"
					},
					"branchId":{
						"type": "string",
						"example": "D MG 01",
						"description": "Filial",
						"x-totvs":{
							"protheus":{
								"field": "SA1.A1_FILIAL / SA2.A2_FILIAL",
								"required": true,
								"type": "Char",
								"length": "12",
								"avialable": true,
								"canUpdate": false
							}
						}
					},
					"companyInternalId":{
						"type": "string",
						"description":"InternalId da chave completa de empresa do produto",
						"x-totvs":{
							"protheus":{
								"field": "EMPRESA|A1_FILIAL|SA1.A1_COD|SA1.A_LOJA / EMPRESA|A2_FILIAL|SA2.A2_COD|SA2.A2_LOJA",
								"required": true,
								"type": "Char",
								"length": "12",
								"avialable": true,
								"canUpdate": false
							}
						}						
					},					
					"code":{
						"type": "string",
						"example": "000001",
						"description": "Código do Cliente/Fornecedor",
						"x-totvs":{
							"protheus":{
								"field": "SA1.A1_COD/SA2.A2_COD",
								"required": true,
								"type": "varChar",
								"length": "6",
								"avialable": true,
								"canUpdate": false
							},
							"datasul":{
								"field": "emitente.cod-emitente",
								"required": true,
								"type": "integer",
								"length": "9",
								"avialable": true,
								"canUpdate": false,
								"description":"Código do Cliente/Fornecedor Formato do Campo: >>>>>>>>9"
							}							
						}
					},
					"storeId":{
						"type": "string",
						"example": "01",
						"description": "Loja do cliente/fornecedor",
						"x-totvs":{
							"protheus":{
							"field": "SA1.A1_LOJA / SA2.A2_LOJA",
							"required": true,
							"type": "Char",
							"length": "02",
							"avialable": true,
							"canUpdate": false
							}
						}
					},
					"internalId":{
						"type": "string",
						"description":"InternalId da entidade"
					},					
					"shortName":{
						"type": "string",
						"example": "JOHN M. CO",
						"description": "Nome reduzido ",
						"x-totvs":{
							"protheus":{
							"field": "SA1.A1_NREDUZ / SA2.A2_NREDUZ",
							"required": false,
							"type": "Char",
							"length": "20",
							"avialable": true,
							"canUpdate": true
							}
						}
					},
					"name":{
						"type": "string",
						"example": "JOHN & MARY CO",
						"description": "Nome da entidade",
						"x-totvs":{
							"protheus":{
								"field": "SA1.A1_NOME / SA2.A2_NOME",
								"required": true,
								"type": "Char",
								"length": "40",
								"avialable": true,
								"canUpdate": true
							}
						}
					},					
					"type":{
						"type": "string",
						"example": "1",
						"description": "Tipo de Entidade 1=CUSTOMER;2=VENDOR;3=BOTH",
						"enum":[
							"1",
							"2",
							"3"
						],
						"x-totvs":{
							"protheus":{
								"required": true,
								"type": "Char",
								"length": "1",
								"avialable": true,
								"canUpdate": false,
								"note": "1=CUSTOMER;2=VENDOR;3=BOTH"
							}
						}
					},
					"entityType":{
						"type": "string",
						"example": "1-Company",
						"description": "Situação Jurídica da Entidade",
						"enum":[
							"1",
							"2",
							"3",
							"4"
						],
						"x-totvs":{
							"protheus":{
								"field": "SA1.A1_PESSOA",
								"required": false,
								"type": "Char",
								"length": "1",
								"avialable": true,
								"canUpdate": true,
								"note": "1=Company;2=Person;3=Foreign;4-Trading"
							}
						}
					},					
					"marketsegment":{
						"type": "object",
						"description": "Segmento de Mercado",
						"properties":{
							"marketSegmentCode":{
								"type": "string",
								"description": "Código do segmento",
								"x-totvs":{
									"protheus":{
										"field": "A1_CODSEG",
										"required": false,
										"type": "varchar",
										"length": "6",
										"description":"Segmento Principal"
									}
								}
							},
							"marketSegmentInternalId":{
								"type": "string",
								"description": "InternalId do MarketSegmentCode"
							},
							"marketSegmentDescription":{
								"type": "string",
								"description": "Descrição do segmento",
								"x-totvs":{
									"protheus":{
										"field": "A1_DESSEG",
										"required": false,
										"type": "varchar",
										"length": "40",
										"description":"Segmento Principal"
									}
								}
							}
						}	
					},
					"registerdate":{
						"type": "string",
						"format": "date-time",
						"example": "2018-06-29T09:34:30Z",
						"description": "Data da implantação do registro",
						"x-totvs":{
							"-datasul":{
								"field": "emitente.data-implant",
								"required": true,
								"type": "date",
								"length": "99/99/9999",
								"avialable": true,
								"canUpdate": true,
								"description": "Data em que o Cliente/Fornecedor foi cadastrado no sistema"
							}
						}
					},
					"registerSituation":{
						"type": "string",
						"example": "active",
						"description": "Status: Ativo, Inativo, Cancelado, Pendente, Suspenso",
						"enum":[
							"active",
							"inactive",
							"canceled",
							"pending",
							"suspend"
						],
						"x-totvs":{
							"-protheus":{
								"field": "A1_MSBLQL / A2_MSBLQL",
								"required": false,
								"type": "char",
								"avialable": true,
								"canUpdate": true,
								"note": "No Protheus Status active/inactive serão convertidos em: active='2',inactive='1'"
							}
						}
					},
					"comments":{
						"type": "string",
						"example": "Lorem ipsum dolor sit amet, consectetur adipiscing elit.",
						"description": "Observações",
						"x-totvs":{
							"-datasul":{
								"field": "emitente.observacoes",
								"required": true,
								"type": "string",
								"length": "2000",
								"avialable": true,
								"canUpdate": true,
								"description": "Informações adicionais relacionadas ao Cliente/Fornecedor"
							}
						}
					},
					"governmentalInformation":{
						"type":"object",
						"description":"Informações Governamentais",
						"$ref":"https://cdn.rawgit.com/renatocunha/Apis/951415fe/Apis/GovernmentalInformation/GovernmentalInformation_1_000.json#/components/schemas/GovernmentalInformation"	
					},
					"address":{
						"type":"array",
						"items":{
							"$ref": "https://rawgit.com/nairansilva/Apis/master/Apis/Seller/address_2_000.json#/components/schemas/AddressInfo"
						}    
					},
					"shippingAddress":{
						"type":"array",
						"items":{
							"$ref": "https://rawgit.com/nairansilva/Apis/master/Apis/Seller/address_2_000.json#/components/schemas/AddressInfo"
						}    
					},										
					"listOfCommunicationInformation":{
						"type":"array",
						"description":"Informações de comunicação",
						"items":{
							"$ref":"https://cdn.rawgit.com/renatocunha/Apis/e85aa574/Apis/communicationInformation/CommunicationInformation_1_002.json#/components/schemas/CommunicationInformation"	
						}
					},
					"listOfContacts":{
						"type":"array",
						"description":"Informações de Contato",
						"items":{
							"$ref":"https://cdn.rawgit.com/renatocunha/Apis/e85aa574/Apis/ContactInformation/ContactInformation_1_000.json#/components/schemas/ContactInformation"	
						}
					},
					"listOfBankingInformation":{
						"type":"array",
						"items":{
							"$ref":"#/components/schemas/bankingInformation"	
						}
					},
					"billingInformation":{
						"type": "object",
						"properties":{
							"billingCustomerCode":{
								"type": "integer",
								"description": "Código do usuário de cobrança",
								"x-totvs":{
									"-datasul":{
										"field": "emitente.cod-cobranca ou pessoa_jurid.num_pessoa_jurid_cobr"
									}
								}
							},
							"billingCustomerInternalId":{
								"type": "string",
								"description": "Billing Customer InternalId"
							},
							"address":{
								"type":"array",
								"items":{
									"$ref": "https://rawgit.com/nairansilva/Apis/master/Apis/Seller/address_2_000.json#/components/schemas/AddressInfo"
								}    
							}
						}
					},
					"vendorInformation":{
						"type": "object",
						"description": "Dados do Vendedor vinculado ao Cliente",
						"properties":{
							"vendorCode":{
								"type": "string",
								"description": "Código do Vendedor",
								"x-totvs":{
									"protheus":{
										"field": "SA1.A1_VEND",
										"required": false,
										"type": "string",
										"length": "06",
										"description":"Código do Vendedor vinculado ao Cliente",
										"avialable": true,
										"canUpdate": true
									}
								}
							}, 
							"vendorInternalId":{
								"type": "string",
								"description": "InternalId do VendorTypeCode"
							}, 								
							"vendorDescription":{
								"type":"string",
								"description": "Nome/Descrição do Vendedor"
							}   
							
						}
					},
					"fiscalInformation":{
						"type": "object",
						"description": "Informações Fiscais",
						"properties":{
							"FiscalCategory":{
								"type":"string",
								"maxLength":3,
								"description":"Categoria da informação fiscal"
							},
							"IsRetentionAgent":{
								"type":"string",
								"description":"Retem impostos"
							},
							"TaxPayer":{
								"type":"string",
								"description":"Contribuinte"
							}
						}
					},
					"creditInformation":{
						"type": "object",
						"description": "Informações de Crédito",
						"properties":{
							"creditIndicator":{
								"type":"string",
								"description":"Indicador de Crédito"
							},
							"creditEvaluation":{
								"type":"string",
								"description":"Avaliação de Crédito"
							},
							"shipmentCreditEvaluation":{
								"type":"string",
								"description":"Avaliação de Crédito para venda"
							},
							"creditLimit":{
								"type":"number",
								"format":"double",
								"description":"Limite de Crédito",
								"x-totvs":{
									"protheus":{
										"field": "SA1.A1_LC",
										"required": false,
										"type": "Integer",
										"format": "int32",
										"length": "14",
										"description":"Lim. Credito",
										"avialable": true,
										"canUpdate": true
									}
								}
							},
							"creditLimitCurrency":{
								"type":"string",
								"description":"Moeda do Limite de Crédito",
								"x-totvs":{
									"protheus":{
										"field": "SA1.A1_MOEDALC",
										"required": false,
										"type": "Integer",
										"format": "int32",
										"length": "02",
										"description":"Moeda do LC",
										"avialable": true,
										"canUpdate": true
									}
								}
							},
							"creditLimitDate":{
								"type":"string",
								"format": "date-time",
								"example": "2018-06-29T09:34:30Z",
								"description":"Data de vencimento do Limite de Crédito",
								"x-totvs":{
									"protheus":{
										"field": "SA1.A1_VENCLC",
										"required": false,
										"type": "Date-Time",
										"length": "08",
										"description":"Moeda do LC",
										"avialable": true,
										"canUpdate": true
									}
								}
							},
							"additionalCreditLimit":{
								"type":"number",
								"format":"double",
								"description":"Limite de Crédito adicional",
								"x-totvs":{
									"protheus":{
										"field": "SA1.A1_LCFIN",
										"required": false,
										"type": "Integer",
										"format": "int32",
										"length": "14",
										"description":"Lim Credito Secundário",
										"avialable": true,
										"canUpdate": true
									}
								}
							},
							"additionalCreditLimitCurrency":{
								"type":"number",
								"format":"double",
								"description":"Moeda do Limite de Crédito adicional"
							},
							"additionalCreditLimitDate":{
								"type":"string",
								"format": "date-time",
								"example": "2018-06-29T09:34:30Z",
								"description":"Data de vencimento do Limite de Crédito adicional"
							},
							"latePeriods":{
								"type":"integer",
								"format": "int32"
							},
							"balanceOfCredit":{
								"type":"number",
								"format":"double",
								"description":"Valor do saldo restante do Cliente"
							}
						}
					},
					"paymentConditionCode":{
						"type":"string",
						"description":"Código do Prazo de Pagamento",
						"maxLength": 3,
						"x-totvs":{
							"protheus":{
								"field": "SA1.A1_COND | SA2.A2_COND",
								"required": false,
								"type": "Char",
								"length": "03",
								"description":"Condição de Pagamento",
								"avialable": true,
								"canUpdate": true
							}
						}
					},
					"paymentConditionInternalId":{
						"type":"string",
						"description":"InternalId do PaymentConditionCode"
					},
					"priceListHeaderItemCode":{
						"type":"string",
						"description":"Código da Tabela de Preço",
						"maxLength": 3,
						"x-totvs":{
							"protheus":{
								"field": "SA1.A1_TABELA",
								"required": false,
								"type": "Char",
								"length": "03",
								"description":"Tabela de preço padrão",
								"avialable": true,
								"canUpdate": true
							}
						}
					},
					"priceListHeaderItemInternalId":{
						"type":"string",
						"description":"InternalId do PriceListHeaderItemCode"
					},					
					"carrierCode":{
						"type":"integer",
						"format": "int32",
						"description":"Código da Transportadora default do Cliente",
						"x-totvs":{
							"protheus":{
								"field": "SA1.A1_TRANSP | SA2.A2_TRANSP",
								"required": false,
								"type": "Char",
								"length": "06",
								"description":"Transportadora Padrão",
								"avialable": true,
								"canUpdate": true
							}
						}
					},					
					"strategicCustomerType":{
						"type": "string",
						"example": "3=Revendedor",
						"description": "Tipo estratégico da Entidade 1-Cons.Final, 2-Produtor, 3-Revendedor, 4-Solidario, 5-Exportação",
						"enum":[
							"1",
							"2",
							"3",
							"4",
							"5"
						],
						"x-totvs":{
							"protheus":{
								"field": "SA1.A1_TIPO / SA2.A2_TIPO",
								"required": false,
								"type": "Char",
								"length": "1",
								"avialable": true,
								"canUpdate": true,
								"note": "1=Cons.Final;2=ProdutorRural;3=Revendedor;4=Solidario;5=Exportação"
							}
						}
					},
					"rateDiscount":{
						"type":"number",
						"format":"double",
						"description":"Percentual de Desconto|Bonificação",
						"x-totvs":{
							"datasul":{
								"field": "Bonificacao",
								"required": false,
								"type": "decimal",
								"length": "9",
								"description":"Desconto Padrão"
							}
						}
					},					
					"sellerCode":{
						"type":"string",
						"description":"Código do representante",
						"x-totvs":{
							"datasul":{
								"field": "clien_financ.cdn_repre",
								"required": true,
								"type": "integer",
								"length": "7"
							}
						}
					},	
					"sellerInternalId":{
						"type":"string",
						"description":"InternalId do SellerCode",
						"x-totvs":{
							"datasul":{
								"field": "clien_financ.cod_empresa|string(clien_financ.cdn_repres)"
							}
						}
					},															
					"taxPayerType":{
						"type":"object",
						"properties":{
							"taxName":{
								"type":"string"
							},
							"isPayer":{
								"type":"boolean"
							},
							"mode":{
								"type":"string"
							}
						}
					}
				}
			},
			"bankingInformation":{
				"type": "object",
				"description": "Lista de contas Bancárias da Entidade Cliente/Fornecedor",
				"properties":{
					"bankCode":{
						"type": "string",
						"description": "Código do Banco",
						"x-totvs":{
							"-datasul":{
								"field": "emitente.cod-banco",
								"required": true,
								"type": "integer",
								"format": "int32",
								"length": "999",
								"description":"Código do banco junto a FEBRABAN",
								"avialable": true,
								"canUpdate": true
							},
							"protheus":{
								"field": "FIL_BANCO",
								"required": false,
								"type": "string",
								"length": "3",
								"description":"Banco",
								"avialable": true,
								"canUpdate": true
							}
						}
					},
					"bankName":{
						"type": "string",
						"description": "Nome do Banco",
						"example": "Caixa Econômica Federal",
						"maxLength":30
					},
					"branchCode":{
						"type": "string",
						"x-totvs":{
							"-datasul":{
								"field": "emitente.agencia",
								"required": true,
								"type": "string",
								"length": "8",
								"description":"Agência bancária do Cliente/Fornecedor"
							},
							"protheus":{
								"field": "FIL_AGENCI",
								"required": false,
								"type": "string",
								"length": "5",
								"description":"Agência",
								"avialable": true,
								"canUpdate": true
							}							
						} 
					},
					"branchKey":{
						"type":"string",
						"maxLength": 10,
						"description":"Dígito Verificador da Agência Bancária",
						"x-totvs":{
							"protheus":{
								"field": "FIL_DVAGE",
								"required": false,
								"type": "string",
								"length": "1",
								"description":"DV Agência",
								"avialable": true,
								"canUpdate": true
							}
						}													
					},
					"checkingAccountNumber":{
						"type":"string",
						"maxLength": 20,
						"description":"Conta Bancária do Cliente/Fornecedor",
						"x-totvs":{
							"-datasul":{
								"field": "emitente.conta-corren",
								"required": true,
								"type": "string",
								"length": "20",
								"description":"Conta corrente do Cliente/Fornecedor "
							},
							"protheus":{
								"field": "FIL_CONTA",
								"required": false,
								"type": "string",
								"length": "10",
								"description":"Conta",
								"avialable": true,
								"canUpdate": true
							}																				
						}
					},
					"checkingAccountNumberKey":{
						"type":"string",
						"description":"Digito Conta Bancária do Cliente/Fornecedor",
						"maxLength":2,
						"x-totvs":{
							"protheus":{
								"field": "FIL_DVCTA",
								"required": false,
								"type": "string",
								"length": "1",
								"description":"DV Conta",
								"avialable": true,
								"canUpdate": true
							}
						}																			
					},
					"checkingAccountType":{
						"type":"string",
						"description":"Tipo da Conta Bancária do Cliente/Fornecedor: 1-Conta Corrente, 2-Conta Poupança",
						"enum":[
							"1",
							"2"
						],
						"x-totvs":{
							"protheus":{
								"field": "FIL_TIPCTA|A2_TIPCTA",
								"required": false,
								"type": "string",
								"length": "1",
								"description":"Tipo de Conta Bancária a ser gravada na tabela de Contas do Fornecedor (FIL) Se for a conta principal, também salva a informação na tabela de Fornecedor (SA2)"
							},
							"-tfs":{
								"field": "id_tp_cta",
								"required": false,
								"type": "string",
								"length": "1",
								"description":"Tipo de conta do cliente: 'P'=Poupança; 'C'=Conta Corrente"   
							}
						} 
					},
					"mainAccount":{
						"type": "string",
						"description" : "Conta Bancária Principal: 1-Principal, 2-Normal",
						"enum":[
							"1",
							"2"
						],
						"x-totvs":{
							"protheus":{
								"field": "FIL_TIPO",
								"required": false,
								"type": "string",
								"length": "1",
								"description":"Indica se é uma conta principal ou uma conta normal, sendo 1=Principal e 2=Normal"
							},
							"-tfs":{
								"field": "nr_seq_ref",
								"required": false,
								"type": "string",
								"length": "1",
								"description":"Numero sequencial da conta do cliente, onde 1 = Principal e maior que 1 = Normal"   
							}
						}  
					},
					"currencyAccount":{
						"type": "string",
						"description" : "Moeda utilizada para os processos com a conta Bancária",
						"x-totvs":{
							"protheus":{
								"field": "FIL_MOEDA",
								"required": false,
								"type": "string",
								"length": "2"
							},
							"-tfs":{
								"field": "Nao se aplica",
								"required": false,
								"description":"É enviado o valor fixo '01' para a moeda utilizada nos processos com a conta Bancária"   
							}
						}     
					}
			
				}
			},
			"Paging":{
				"type": "object",
				"properties":{
					"hasNext":{
						"type": "boolean",
						"example": false
					}
				}
			},
			"ErrorDetails":{
                "type":"object",
                "allOf":[
                    {
                        "$ref":"#/components/schemas/ErrorModel" 
                    },
                    {
                        "$ref":"#/components/schemas/ErrorDetail" 
                    }
                ]
            },
            "ErrorModel":{
                "type":"object",
                "required":[
                    "code",
                    "message",
                    "detailedMessage"
                ],
                "properties":{
                    "code":{
                        "type":"string",
                        "description":"Código identificador do erro."
                    },
                    "message":{
                        "type":"string",
                        "description":"Literal no idioma da requisição descrevendo o erro para o usuário."
                    },
                    "detailedMessage":{
                        "type":"string",
                        "format":"uri",
                        "description":"Mensagem técnica e mais detalhada do erro."
                    },
                    "helpUrl":{
                        "type":"string",
                        "format":"uri",
                        "description":"URI para documentação do erro."
                    }
                }
            },
            "ErrorDetail":{
                "type":"object",
                "properties":{
                    "details":{
                        "type":"array",
                        "items":{
                            "$ref":"#/components/schemas/ErrorModel"   
                        }
                    }
                }
            }
		}
	}
}